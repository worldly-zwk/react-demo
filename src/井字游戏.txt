import React,{Component} from 'react'
import ReactDOM from 'react-dom'
import './index.css'

// class Square extends Component {
//     constructor (){
//         super();
//         this.state={
//             value:null
//         }
//         this.click=this.click.bind(this);
//     }
//     render() {
//         return (
//           <button className="square" onClick={this.props.onClick}>
//             {this.props.value}
//           </button>
//         );
//     }
// }

function Square(props){
    return (
        <button className="square" onClick={props.onClick}>
            {props.value}
        </button>
    )
}

function calculateWinner(squares){
    const lines=[
        [0,1,2],
        [3,4,5],
        [6,7,8],
        [0,3,6],
        [1,4,7],
        [2,5,8],
        [0,4,8],
        [2,4,6]
    ]
    for(let i=0;i<lines.length;i++){
        const [a,b,c]=lines[i];
        if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){
            return squares[a];
        }
    }
    return null;
}

class Board extends Component {
  renderSquare(i) {
    return <Square value={this.props.squares[i]} onClick={()=>this.props.onClick(i)}/>;
  }

  render() {
    return (
      <div>
        <div className="board-row">
          {this.renderSquare(0)}
          {this.renderSquare(1)}
          {this.renderSquare(2)}
        </div>
        <div className="board-row">
          {this.renderSquare(3)}
          {this.renderSquare(4)}
          {this.renderSquare(5)}
        </div>
        <div className="board-row">
          {this.renderSquare(6)}
          {this.renderSquare(7)}
          {this.renderSquare(8)}
        </div>
      </div>
    );
  }
}

class Game extends Component {
    constructor (){
        super();
        this.state={
            history:[
                {squares:Array(9).fill(null)}
            ],
            xIsNext:true,
            stepNumber:0
        }
        this.handleClick=this.handleClick.bind(this);
    }
    handleClick (i){
        var history=this.state.history.slice(0,this.state.stepNumber+1),
            current=history[history.length-1];
        var squares=current.squares.slice();
        if(calculateWinner(squares) || squares[i]){
            return false;
        }
        squares[i]=this.state.xIsNext ?"X" :"O";
        this.setState({history:history.concat([{squares}]),xIsNext:!this.state.xIsNext,stepNumber:this.state.stepNumber+1})
    }
    jumpTo (step){
        this.setState({
            stepNumber:step,
            xIsNext:(step%2) ? false : true
        })
    }
  render() {
      var history=this.state.history.slice(0,this.state.stepNumber+1);
      var current=history[history.length-1];
      var winner=calculateWinner(current.squares);
      let status;
      if(winner){
          status="Winner: "+winner;
      }else if(this.state.history.length>9){
          status="It ends in a draw";
      }else{
          status='Next player: ' + (this.state.xIsNext ? 'X' : 'O');
      }
      var moves=history.map((value,key)=>{
        var desc=key ? 'Move #' + key : 'Game start';
        return (<li key={key}><a onClick={()=>this.jumpTo(key)}>{desc}</a></li>)
      })
    return (
      <div className="game">
        <div className="game-board">
          <Board squares={current.squares} onClick={this.handleClick}/>
        </div>
        <div className="game-info">
          <div>{status}</div>
          <ol>{moves}</ol>
        </div>
      </div>
    );
  }
}


ReactDOM.render(
  <Game/>,
  document.getElementById('root')
);
